#! /bin/bash

# Pass this script a list of host names to use as the test nodes.

HERE=${0%/*}
. $HERE/lib/setup.sh

setup --disk=10M --disk=10M "$@"

_up
_force_primary
_initial_resync

# Detaching causes disks to go through this state.
pop_forbidden_patterns 'peer-disk:Failed' 'disk:Failed'

DEVICE1=$(on "${NODES[0]}" drbdadm sh-dev $RESOURCE/1)
DEVICE2=$(on "${NODES[0]}" drbdadm sh-dev $RESOURCE/2)

first_node="${NODES[0]}"
other_nodes=( $(all_nodes_except "$first_node") )

on "$first_node" io-load-dd --count=100 --oflag=sync --repeat=forever $DEVICE2
sleep 1  # Ensure that some I/O happens before the next steps

on "${NODES[@]}" drbdadm detach $RESOURCE/1
volume_event "${NODES[@]/%/:1}" -y 'device .* disk:Diskless'

on "${NODES[@]}" drbdadm del-minor $RESOURCE/1
volume_event "${NODES[@]/%/:1}" -y 'destroy device'

on "${NODES[@]}" drbdadm new-minor $RESOURCE/1
volume_event "${NODES[@]/%/:1}" -y 'create device'

# FIXME: DRBD does not handle concurrent attach correctly

on "$first_node" drbdadm attach $RESOURCE/1
# The node doing the attach first goes straight to UpToDate
volume_event "$first_node:1" -y 'device .* disk:UpToDate'

# The other nodes that see that, will go though Negotiating first
volume_event "${other_nodes[@]/%/:1}" -y 'peer-device .* peer-disk:UpToDate'
on "${other_nodes[@]}" drbdadm attach $RESOURCE/1
volume_event "${other_nodes[@]/%/:1}" -y 'device .* disk:Negotiating'
volume_event "${other_nodes[@]/%/:1}" -y 'device .* disk:UpToDate'


# Now the same procedure in a different order. Test if they are
# able to do a cluster-wide detach if one does not know the volume
on "$first_node" drbdadm detach $RESOURCE/1
volume_event "${first_node}:1" -y 'device .* disk:Diskless'

on "$first_node" drbdadm del-minor $RESOURCE/1
volume_event "${first_node}:1" -y 'destroy device'

on "${other_nodes[@]}" drbdadm detach $RESOURCE/1
volume_event "${other_nodes[@]/%/:1}" -y 'device .* disk:Diskless'


on "$first_node" io-load-dd --stop $DEVICE2
on "$first_node" drbdadm secondary $RESOURCE
event "$first_node" -y 'resource .* role:Secondary'

_down
_rmmod
