#! /usr/bin/env python3
### vmshed: { "vms_all": [2], "vms_ci": [2], "drbd_version_min": "9.1" }
#
# Up to version 9.1.14 (and 9.2.3) drbd failed to release uuid_sem on
# the target node of a two-phase-commit that establishes a connection.
# This test highlights that bug by provoking a timeout of a connect
# two-phase-commit on the passive/target node.
#

import time
from python import drbdtest
from python.drbdtest import connections, log, peer_devices

def wait_twopc_started_on_all(res):
    while True:
        tid = None
        p_tid = None
        for node in res.nodes:
            if tid is not None:
                p_tid = tid
            tid = node.twopc_tid()
            if p_tid is not None:
                assert(p_tid == tid)

        if tid is not None:
            return tid
        time.sleep(0.1)

def wait_twopc_completed(res, node, complete_tid):
    while True:
        tid = node.twopc_tid()
        if tid != complete_tid:
            return tid
        time.sleep(0.1)

resource = drbdtest.setup_resource(nodes=2)
resource.resource_options = 'twopc-timeout 50;'
resource.add_disk('10M')
resource.nodes.up_unconnected()

A, B = resource.nodes

A.block_packet_type(drbdtest.P_TWOPC_YES, from_node=B, volume=0xffff)
connections(A, B, bidir=True).connect()
tid1 = wait_twopc_started_on_all(resource)
log('two-phase-commit started on all nodes. tid1 = {}'.format(tid1))
B.block_packet_type(drbdtest.P_TWOPC_ABORT, from_node=A, volume=0xffff)
tid2 = wait_twopc_completed(resource, A, tid1)
log('two-phase-commit timeout & retry on A. tid2 = {}'.format(tid2))
tid3 = wait_twopc_completed(resource, B, tid1)
log('two-phase-commit timeout on B. tid3 = {}'.format(tid3))
B.unblock_packet_type(drbdtest.P_TWOPC_ABORT, from_node=A, volume=0xffff)
A.unblock_packet_type(drbdtest.P_TWOPC_YES, from_node=B, volume=0xffff)
B.volumes.new_current_uuid() # Does this terminate/return ?

resource.down()
resource.cluster.teardown()
