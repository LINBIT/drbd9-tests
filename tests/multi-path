#! /usr/bin/env python3
### vmshed: { "vms_all": [2], "vms_ci": [2] }

# Pass this script a list of host names to use as the test nodes.

from python import drbdtest

resource = drbdtest.setup(max_nodes=2, multi_paths=True)
resource.add_disk('4M')
resource.net_options = 'ping-timeout 5; ping-int 1; connect-int 1;'

A = resource.nodes[0]
B = resource.nodes[1]

# ensure the first path is being used
A.block_path(B, 1)

resource.up_wait()
# initial sync
A.primary(force=True)
A.secondary()
B.event(r'connection .* role:Primary', r'peer-device .* peer-disk:UpToDate')
B.event(r'connection .* role:Secondary', r'device .* disk:UpToDate')

resource.forbidden_patterns.difference_update([
    r'connection:BrokenPipe',
    r'connection:NetworkFailure',
    r'connection:Timeout',
])


A.unblock_path(B, 1)

for i in range(3):
    # switch to second path
    A.block_path(B, 0)
    A.event(r'path .* established:no')
    A.event(r'path .* established:yes')
    A.event(r'connection .* connection:Connected')

    # allow first again
    A.unblock_path(B, 0)

    # verify they're still connected
    A.primary()
    B.event(r'connection .* role:Primary')

    # kill second path
    A.block_path(B, 1)
    A.event(r'path .* established:no')
    A.event(r'path .* established:yes')
    A.event(r'connection .* connection:Connected')

    # allow second again
    A.unblock_path(B, 1)

    # verify connection
    A.secondary()
    B.event(r'connection .* role:Secondary')


resource.down()

resource.teardown()
