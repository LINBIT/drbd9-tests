#! /usr/bin/env python3

# Pass this script a list of host names to use as the test nodes.

import random
from subprocess import CalledProcessError
import sys

from python import drbdtest
from python.drbdtest import log

sys.argv.extend(['--proxy'])

resource = drbdtest.setup(nodes=2)

resource.add_disk('64M')
resource.net_options = 'on-congestion pull-ahead; congestion-fill 10k; protocol A;'

resource.up_wait()
resource.skip_initial_sync()


first = resource.nodes[0]
others = resource.nodes.difference([first])

for i in (1,2,3):

    # write data
    with first.asPrimary():
        first.run(["dd",
                "if=/dev/zero", "of=%s" % resource.volumes[0].device(),
                "bs=1M", "count=4", "oflag=direct"])

        # The replication state will move to "Ahead/Behind" *while*
        # the first VM is still Primary.
        #
        # So we need to check for these events in here; the Secondary
        # state will come afterwards, anyway.
        first.peer_devices.event(r'peer-device .* replication:Ahead')
        others.peer_devices.event(r'peer-device .* replication:Behind')

        first.peer_devices.event(r'peer-device .* replication:SyncSource')
        others.peer_devices.event(r'peer-device .* replication:SyncTarget')

        resource.nodes.peer_devices.event(r'peer-device .* replication:Established')
