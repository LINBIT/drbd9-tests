image: $LINBIT_DOCKER_REGISTRY/build-helpers:$BUILD_HELPERS_VERSION

variables:
  BUILD_HELPERS_VERSION: c0d39c0e5a2235262f21d072c4bf3b2dd62b2040
  STABILITY_TEST_COUNT: 50
  DRBD_VERSION: 9.0.0.latest
  DRBD_UTILS_VERSION: 9.0.0.latest-*

stages:
  - base_image
  - check
  - build
  - test
  - publish

base_image:
  stage: base_image
  rules:
    - if: $CI_MERGE_REQUEST_ID
      when: manual
    - if: $CI_COMMIT_BRANCH == 'master'
      when: manual
  tags:
    - libvirt
  # avoid blocking the pipeline with a manual job
  allow_failure: true
  cache:
    paths:
      - download
  script:
    - . virter/version.env
    - curl -sSfL -u gitlab-ci-token:$CI_JOB_TOKEN $CI_SERVER_URL/linbit/build-helpers/-/archive/$BUILD_HELPERS_VERSION/ignored.tar.gz | tar -xvzf -
    - mv build-helpers-* build-helpers
    - . build-helpers/gitlab-utils.sh
    - |
      ci_prepare_tools
      ci_fetch_rq
      ci_fetch_binary virter virter-$VIRTER_VERSION https://github.com/LINBIT/virter/releases/download/$VIRTER_VERSION/virter-linux-amd64
    - |
      cd virter
      virter image rm drbd-base-image
      for image in $(make -s print_base_images); do
        make "base_image_$image" BASE_IMAGE_NAME=drbd-base-image
        virter image save drbd-base-image | curl -isSf -u $LINBIT_REGISTRY_USER:$LINBIT_REGISTRY_PASSWORD -H "Tranfer-Encoding: chunked" -F raw.directory=/ -F raw.asset0=@- -F "raw.asset0.filename=$image" "$LINBIT_REGISTRY_URL/service/rest/v1/components?repository=vm-image"
        virter image rm drbd-base-image
      done

check-test-list:
  stage: check
  rules:
    - if: $CI_MERGE_REQUEST_ID
  cache:
    paths:
      - download
  script:
    - |
      . /usr/local/bin/gitlab-utils.sh
      ci_prepare_tools
      ci_fetch_rq
    - COMPARISON="$(comm <(ls tests | grep -v "^python$") <(cat virter/tests.all.toml | rq -t | jq -r '.tests | to_entries[] | .key') -3)"
    - printf "Comparison of 'tests' directory with 'virter/tests.all.toml' listing:\n%s\n" "$COMPARISON"
    - if [ -n "$COMPARISON" ]; then exit 1; fi

bundle:
  stage: build
  rules:
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: $CI_PIPELINE_SOURCE == 'schedule'
  script:
    - make bundle
  artifacts:
    paths:
      - drbd-test-bundle.tgz
    expire_in: 1 week

build-docker:
  stage: build
  tags:
    - shell
  rules:
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: $CI_PIPELINE_SOURCE == 'schedule'
  script:
    - docker login -u $LINBIT_REGISTRY_USER -p $LINBIT_REGISTRY_PASSWORD $LINBIT_DOCKER_REGISTRY
    - make DOCKER_IMAGE_NAME=$LINBIT_DOCKER_REGISTRY/drbd9-tests:$CI_COMMIT_SHA docker
    - docker push $LINBIT_DOCKER_REGISTRY/drbd9-tests:$CI_COMMIT_SHA

push-docker:
  stage: publish
  tags:
    - shell
  rules:
    - if: $CI_COMMIT_BRANCH == 'master' && $CI_PIPELINE_SOURCE != 'schedule'
  dependencies:
    - build-docker
  script:
    - docker login -u $LINBIT_REGISTRY_USER -p $LINBIT_REGISTRY_PASSWORD $LINBIT_DOCKER_REGISTRY
    - docker pull $LINBIT_DOCKER_REGISTRY/drbd9-tests:$CI_COMMIT_SHA
    - docker tag $LINBIT_DOCKER_REGISTRY/drbd9-tests:$CI_COMMIT_SHA $LINBIT_DOCKER_REGISTRY/drbd9-tests:latest
    - docker push $LINBIT_DOCKER_REGISTRY/drbd9-tests:latest


publish:
  stage: publish
  rules:
    - if: $CI_COMMIT_BRANCH == 'master' && $CI_PIPELINE_SOURCE != 'schedule'
  script:
    - curl -isSf -u $LINBIT_REGISTRY_USER:$LINBIT_REGISTRY_PASSWORD --upload-file drbd-test-bundle.tgz $LINBIT_REGISTRY_URL/repository/test-suite/
  dependencies:
    - bundle


test:
  stage: test
  rules:
    - if: $CI_MERGE_REQUEST_ID
  tags:
    - libvirt
  cache:
    paths:
      - download
  script:
    - |
      mkdir -p drbd-test-bundle
      tar -C drbd-test-bundle -xvf drbd-test-bundle.tgz
    - . drbd-test-bundle/virter/version.env
    - curl -sSfL -u gitlab-ci-token:$CI_JOB_TOKEN $CI_SERVER_URL/linbit/build-helpers/-/archive/$BUILD_HELPERS_VERSION/ignored.tar.gz | tar -xvzf -
    - mv build-helpers-* build-helpers
    - . build-helpers/gitlab-utils.sh
    - |
      ci_prepare_tools
      ci_fetch_rq
      ci_fetch_binary virter virter-$VIRTER_VERSION https://github.com/LINBIT/virter/releases/download/$VIRTER_VERSION/virter-linux-amd64
      ci_fetch_binary vmshed vmshed-$VMSHED_VERSION https://github.com/LINBIT/vmshed/releases/download/$VMSHED_VERSION/vmshed-linux-amd64
    - docker image pull $LINBIT_DOCKER_REGISTRY/drbd9-tests:$CI_COMMIT_SHA
    - |
      export DRBD9_TESTS_VERSION=$CI_COMMIT_SHA
      ./drbd-test-bundle/virter/run-test.sh
  dependencies:
    - bundle
    - build-docker
  artifacts:
    # provide a convenient name so that the downloaded artifacts can be identified
    name: $CI_PROJECT_NAME-$CI_JOB_ID
    paths:
      - tests-out/
    when: always
    reports:
      junit: tests-out/test-results/*.xml


stability-test:
  stage: test
  rules:
    - if: $CI_PIPELINE_SOURCE == 'schedule'
  tags:
    - libvirt
  cache:
    paths:
      - download
  timeout: 12h
  script:
    - |
      mkdir -p drbd-test-bundle
      tar -C drbd-test-bundle -xvf drbd-test-bundle.tgz
    - . drbd-test-bundle/virter/version.env
    - curl -sSfL -u gitlab-ci-token:$CI_JOB_TOKEN $CI_SERVER_URL/linbit/build-helpers/-/archive/$BUILD_HELPERS_VERSION/ignored.tar.gz | tar -xvzf -
    - mv build-helpers-* build-helpers
    - . build-helpers/gitlab-utils.sh
    - |
      ci_prepare_tools
      ci_fetch_rq
      ci_fetch_binary virter virter-$VIRTER_VERSION https://github.com/LINBIT/virter/releases/download/$VIRTER_VERSION/virter-linux-amd64
      ci_fetch_binary vmshed vmshed-$VMSHED_VERSION https://github.com/LINBIT/vmshed/releases/download/$VMSHED_VERSION/vmshed-linux-amd64
    - docker image pull $LINBIT_DOCKER_REGISTRY/drbd9-tests:$CI_COMMIT_SHA
    - |
      export DRBD9_TESTS_VERSION=$CI_COMMIT_SHA
      ./drbd-test-bundle/virter/run-test.sh --repeats=$STABILITY_TEST_COUNT --tests=drbd-test-bundle/virter/tests.all.toml --error-details=false --quiet || true
      ./drbd-test-bundle/virter/elasticsearch/elasticsearch-insert.sh https://es01.at.linbit.com tests-out/results.json drbd-test-bundle/virter/tests.toml
  dependencies:
    - bundle
    - build-docker
  artifacts:
    # provide a convenient name so that the downloaded artifacts can be identified
    name: $CI_PROJECT_NAME-$CI_JOB_ID
    paths:
      - tests-out/
    expire_in: 2 weeks
